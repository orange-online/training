buildscript {
	ext {
		artifactId = 'deepdraw-training-framework-utils'

		projectName = 'deepdraw-training-framework-utils'
		pomPath = "$buildDir/pom.xml"
	}
	repositories {
		mavenCentral()
	}
	dependencies {
	}
}

plugins {
	id 'java'
	id 'maven'
    id 'java-library'
	id 'jacoco'
}

group = 'cn.deepdraw.training'
version = '3.0.0'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
}

jacocoTestReport {
	classDirectories = fileTree(dir: "${buildDir}/classes/java/main", includes: ["**/*.class"]) // 指定扫描当前项目编译文件
	reports {
		xml.enabled false
		html.enabled true
	}
}

jacocoTestCoverageVerification {
	classDirectories = fileTree(dir: "${buildDir}/classes/java/main", includes: ["**/*.class"]) // 指定扫描当前项目编译文件
	violationRules {
		rule {
			limit {
				minimum = 0.7 // 单元测试覆盖率不能低于70%
			}
		}
	}
}

task writePom {
	doLast {
		pom {
		}.writeTo(pomPath)
	}
}

jar {
	dependsOn test, writePom
	baseName "$projectName"
	// 写入pom.xml
	into("META-INF/maven/$project.group/$project.name") {
		from pomPath
	}

	manifest {
		attributes 'Implementation-Title': 'Gradle'
		attributes 'Implementation-Version': version
		attributes 'Created-By': 'Deepdraw'
	}
}

test {

	useJUnitPlatform()
}

install {
    repositories.mavenInstaller {
        pom.groupId = project.group
        pom.artifactId = project.artifactId
        pom.version = project.version
    }
}

uploadArchives {
	repositories {
		mavenDeployer {
			repository(url: DEEPDRAW_REPO_URL) {
				authentication(userName: DEEPDRAW_REPO_ACCOUNT, password: DEEPDRAW_REPO_PWD)
			}
			pom.project {
				groupId project.group
				artifactId project.artifactId
				version project.version
			}
		}
	}
}

dependencies {

	// jackson jars
	api('com.fasterxml.jackson.core:jackson-core:2.9.6')
	api('com.fasterxml.jackson.core:jackson-databind:2.9.6')
	api('com.fasterxml.jackson.core:jackson-annotations:2.9.6')

	// commons jars
	api('commons-beanutils:commons-beanutils:1.9.3')
	api('commons-codec:commons-codec:1.11')
	api('commons-collections:commons-collections:3.2.2')
	api('commons-digester:commons-digester:2.1')
	api('commons-fileupload:commons-fileupload:1.3.3')
	api('commons-io:commons-io:2.6')
	api('commons-lang:commons-lang:2.6')
	api('commons-logging:commons-logging:1.2')
	api('commons-pool:commons-pool:1.6')
	api('commons-validator:commons-validator:1.6')

	// apache jars
	api('org.apache.httpcomponents:httpclient:4.5.5')
	api('org.apache.httpcomponents:httpcore:4.4.9')
	api('org.apache.httpcomponents:httpcore-nio:4.4.9')
	api('org.apache.httpcomponents:httpmime:4.5.5')
	api('org.apache.commons:commons-configuration2:2.2')
	api('org.apache.commons:commons-lang3:3.7')

	api('javax.servlet:javax.servlet-api:3.0.1')

	// slf4j jars
	api('org.slf4j:slf4j-api:1.7.25')

	// other jars
	api('ognl:ognl:3.0.6') { exclude module: "javassist" }
	api('javax.ws.rs:javax.ws.rs-api:2.1.1')

	testImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version:'1.4.2'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.4.2'
	testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.4.2'

	testImplementation 'org.mockito:mockito-core:2.27.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:2.27.0'
	testImplementation 'org.hamcrest:java-hamcrest:2.0.0.0'
}
